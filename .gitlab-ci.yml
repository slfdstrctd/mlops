image: python:3.10

stages:
  - lint
  - test

cache:
  paths:
    - .cache/pypoetry/

# Globally install Poetry and configure it
before_script:
  - pip install poetry
  - poetry install
  - source `poetry env info --path`/bin/activate

lint:ruff:
  stage: lint
  script:
    - poetry run ruff check . || true  # Safely continue even if issues are found
    - poetry run ruff check . --output-format=gitlab > gl-code-quality-report.json
  artifacts:
    reports:
      codequality: gl-code-quality-report.json
  cache:
    key: ${CI_JOB_NAME}
    paths:
      - .cache/pypoetry/
      - .ruff_cache
  only:
    - merge_requests

lint:pylint:
  stage: lint
  script:
    - poetry run pylint --fail-under=8 $(git ls-files '*.py')
  only:
    - merge_requests

test:pytest:
  stage: test
  script:
    - poetry install
    - poetry run pytest
  only:
    - merge_requests
